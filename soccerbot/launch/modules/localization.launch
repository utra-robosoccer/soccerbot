<!-- Launches the localization using for amcl the robot -->

<launch>
    <arg name="fake_localization" default="false" />
    <arg name="robot_name" />
    <arg name="map_name" />
    <arg name="x_pos" />
    <arg name="y_pos" />
    <arg name="a_pos" />

    <!-- Map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find soccer_common)/maps/$(arg map_name).yaml">
        <param name="frame_id" value="world" />
    </node>

    <node pkg="soccer_object_localization" type="detector_fieldline.py" name="detector_fieldline" output="screen" />
    <node pkg="soccer_object_localization" type="detector_goalpost.py" name="detector_goalpost" output="screen" />
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" unless="$(arg fake_localization)">
        <rosparam file="$(find soccer_common)/config/pointcloud_to_laserscan.yaml" command="load" />
        <remap from="cloud_in" to="field_point_cloud" />
    </node>

    <!-- Ball Detection -->
    <node pkg="soccer_object_localization" type="detector_objects.py" name="ball_detector" output="screen" />
    <node name="object_detector" pkg="soccer_object_detection" type="object_detect_node.py" output="screen" args="--model $(find soccer_object_detection)/src/outputs/model3_feat10 --num-feat 10" unless="$(arg fake_localization)">
        <env name="OMP_NUM_THREADS" value="1" />
    </node>

    <!-- Complementary filter -->
    <node pkg="imu_complementary_filter" type="complementary_filter_node" name="imu_complementary_filter" output="log">
        <rosparam file="$(find soccerbot)/config/imu_complementary_filter.yaml" command="load" />
        <remap from="imu/data_raw" to="imu_raw" />
        <remap from="imu/data" to="imu_filtered" />
    </node>

    <!-- IMU location -->
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" unless="$(arg fake_localization)" output="log">
        <rosparam file="$(find soccerbot)/config/robot_pose_ekf.yaml" command="load" />
        <remap from="robot_pose_ekf/odom_combined" to="odom_combined" />
        <remap from="imu_data" to="imu_filtered" />
        <param name="output_frame" value="$(arg robot_name)/odom" />
        <param name="base_footprint_frame" value="$(arg robot_name)/base_footprint" />
    </node>
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true" output="log">
        <rosparam file="$(find soccerbot)/config/robot_localization_ekf_map.yaml" command="load" />
        <!--        <param name="odom0" value="/$(arg robot_name)/odom" />-->
        <!--&lt;!&ndash;        <param name="pose1" value="odom_combined" />&ndash;&gt;-->

        <!--        <param name="pose0" value="/$(arg robot_name)/amcl_pose" />-->
        <!--        <param name="imu0" value="/$(arg robot_name)/imu_filtered" />-->
        <param name="odom_frame" value="$(arg robot_name)/odom" />
        <param name="base_link_frame" value="$(arg robot_name)/base_camera" />
    </node>

    <node name="torso_height_publisher" pkg="soccer_description" type="base_footprint_to_torso.py" />

    <!-- AMCL Localization $(arg x_pos)-->
    <node pkg="amcl" type="amcl" name="amcl" respawn="true" unless="$(arg fake_localization)" output="log">
        <rosparam file="$(find soccerbot)/config/amcl.yaml" command="load" />
        <param name="initial_pose_x" value="$(arg x_pos)" />
        <param name="initial_pose_y" value="$(arg y_pos)" />
        <param name="initial_pose_a" value="$(arg a_pos)" />
        <param name="odom_frame_id" value="$(arg robot_name)/odom" />
        <param name="base_frame_id" value="$(arg robot_name)/base_camera" />
    </node>

    <node pkg="tf" type="static_transform_publisher" name="imu_to_robot_base" args="0 0 0 0 0 0 $(arg robot_name)/odom $(arg robot_name)/base_footprint 100" if="$(arg fake_localization)" />

    <node pkg="fake_localization" type="fake_localization" name="fake_localization" if="$(arg fake_localization)">
        <remap from="base_pose_ground_truth" to="base_pose_ground_truth" />
        <param name="global_frame_id" value="world" />
        <param name="base_frame_id" value="$(arg robot_name)/base_footprint" />
        <param name="odom_frame_id" value="$(arg robot_name)/odom" />
        <param name="delta_x" value="0" />
        <param name="delta_y" value="0" />
    </node>
</launch>
