<launch>
    <arg name="simulation" default="false" />
    <arg name="robot_id" default="$(optenv ROBOCUP_ROBOT_ID 1)" />
    <arg name="robot_name" value="robot$(arg robot_id)" />
    <arg name="robot_model" default="$(optenv ROBOT_MODEL bez1)" />

    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time: %r}] [${node} ${function} ${line}]: ${message}" />
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find soccerbot)/config/rosconsole.conf" />

    <param name="/use_sim_time" value="$(arg simulation)" />

    <!-- prettier-ignore -->

    <param name="robot_description" if="$(eval robot_model == 'bez1')" command="xacro '$(find bez1_description)/urdf/bez1.xacro'
        robot_name:=$(arg robot_name)
        model_type:=dae
        file_path:=package://bez1_description
        has_base_footprint:=false
        tf_prefix:=$(arg robot_name)
        "
    />

    <param
        name="robot_description"
        if="$(eval robot_model == 'bez2')"
        command="xacro '$(find bez2_description)/urdf/bez2.xacro'
        robot_name:=$(arg robot_name)
        model_type:=stl
        file_path:=package://bez2_description
        has_base_footprint:=false
        tf_prefix:=$(arg robot_name)"
    />

    <param
        name="robot_description"
        if="$(eval robot_model == 'bez3')"
        command="xacro '$(find bez3_description)/urdf/bez3.xacro'
        robot_name:=$(arg robot_name)
        model_type:=stl
        file_path:=package://bez3_description
        has_base_footprint:=false
        tf_prefix:=$(arg robot_name)"
    />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

    <include file="$(find soccerbot)/launch/modules/sensors.launch" unless="$(arg simulation)">
        <arg name="robot_model" value="$(arg robot_model)" />
    </include>

    <include file="$(find soccerbot)/launch/modules/communication.launch" if="$(arg simulation)" />

    <node pkg="soccer_strategy" type="game_controller_receiver.py" name="game_controller_receiver" output="screen" />

    <include file="$(find soccerbot)/launch/modules/localization.launch">
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="map_name" value="robocup" if="$(arg simulation)" />
        <arg name="map_name" value="test" unless="$(arg simulation)" />
        <arg name="simulation" value="$(arg simulation)" />
        <arg name="robot_model" value="$(arg robot_model)" />
    </include>

    <include file="$(find soccerbot)/launch/modules/navigation.launch">
        <arg name="simulation" value="$(arg simulation)" />
        <arg name="robot_model" value="$(arg robot_model)" />
    </include>

    <include file="$(find soccerbot)/launch/modules/strategy.launch">
        <arg name="robot_id" value="$(arg robot_id)" />
        <arg name="robot_model" value="$(arg robot_model)" />
        <arg name="simulation" value="$(arg simulation)" />
    </include>

    <!-- prettier-ignore -->
    <node pkg="rosbag" type="record" name="rosbag" args="-O $(find soccerbot)/bags/$(optenv ROBOCUP_TEAM_COLOR red)_$(arg robot_name).bag
        /$(arg robot_name)/action_complete
        /$(arg robot_name)/amcl_pose
        /$(arg robot_name)/ball_pixel
        /$(arg robot_name)/command
        /$(arg robot_name)/detected_robot_pose
        /$(arg robot_name)/detection_image
        /$(arg robot_name)/gamestate
        /$(arg robot_name)/goal
        /$(arg robot_name)/head_centered_on_ball
        /$(arg robot_name)/imu_raw
        /$(arg robot_name)/imu_filtered
        /$(arg robot_name)/initialpose
        /$(arg robot_name)/joint_command
        /$(arg robot_name)/joint_states
        /$(arg robot_name)/map
        /$(arg robot_name)/object_bounding_boxes
        /$(arg robot_name)/odom
        /$(arg robot_name)/odom_combined
        /$(arg robot_name)/path
        /$(arg robot_name)/path_odom
        /$(arg robot_name)/reset_robot
        /$(arg robot_name)/scan
        /$(arg robot_name)/set_pose
        /$(arg robot_name)/state
        /$(arg robot_name)/torso_height
        /$(arg robot_name)/kicking_angle
        /reset_ball
        /tf
        /tf_static
        /rosout
    "
    />

    <!-- Localization bag -->
    <node
        pkg="rosbag"
        type="record"
        name="rosbag_localization"
        args="-O $(find soccerbot)/bags/localization.bag
        /$(arg robot_name)/state
        /$(arg robot_name)/imu_raw
        /$(arg robot_name)/imu_filtered
        /$(arg robot_name)/initialpose
        /$(arg robot_name)/map
        /$(arg robot_name)/odom
        /$(arg robot_name)/odom_combined
        /$(arg robot_name)/camera/line_image
        /$(arg robot_name)/scan
        /$(arg robot_name)/field_point_cloud
        /tf
        /tf_static
    "
    />
</launch>
