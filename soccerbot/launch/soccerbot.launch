<launch>
    <arg name="simulation" default="true" />
    <arg name="competition" default="$(optenv COMPETITION true)" />
    <arg name="x_pos" default="$(optenv X_POS 0)" />
    <arg name="y_pos" default="$(optenv Y_POS 0)" />
    <arg name="a_pos" default="$(optenv ANGLE 0)" />
    <arg name="goalie" default="$(optenv GOALIE true)" />
    <arg name="fake_localization" default="false" />
    <arg name="robot_name" default="$(optenv ROBOT_NAME robot1)" />
    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${node} ${logger} ${function} ${line}]: ${message})" />

    <group ns="$(arg robot_name)">

        <param name="/simulation_active" value="true"/>
        <param name="/use_sim_time" value="true"/>
        <machine name="$(arg robot_name)" address="$(optenv IP_ADDRESS localhost)" />

        <param name="robot_description" command="xacro '$(find soccer_description)/models/soccerbot.xacro'
            robot_name:=$(arg robot_name)
            model_type:=dae
            file_path:=package://soccer_description
            has_base_footprint:=false
            tf_prefix:=$(arg robot_name)
            "
        />
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="torso_height_publisher" pkg="soccer_description" type="base_footprint_to_torso.py" />

        <!-- Robocup bridge -->
        <node pkg="soccer_webots" type="game_controller_bridge.py" name="game_controller_bridge" output="screen"
              args="--robot_name $(arg robot_name)" if="$(arg competition)">
        </node>

        <include file="$(find soccerbot)/launch/modules/sensors.launch" unless="$(arg simulation)">
            <arg name="robot_name" value="$(arg robot_name)" />
        </include>

        <include file="$(find soccerbot)/launch/modules/simulation.launch" if="$(eval simulation and not competition)">
            <arg name="robot_name" value="$(arg robot_name)" />
        </include>

        <include file="$(find soccerbot)/launch/modules/localization.launch">
            <arg name="fake_localization" value="$(arg fake_localization)" />
            <arg name="robot_name" value="$(arg robot_name)"/>
            <arg name="x_pos" value="$(arg x_pos)" />
            <arg name="y_pos" value="$(arg y_pos)" />
            <arg name="a_pos" value="$(arg a_pos)" />
            <arg name="map_name" value="robocup" if="$(arg simulation)" />
            <arg name="map_name" value="test" unless="$(arg simulation)" />
        </include>

        <include file="$(find soccerbot)/launch/modules/navigation.launch">
            <arg name="simulation" value="$(arg simulation)" />
        </include>

        <rosparam command="load" file="$(find soccerbot)/config/$(arg robot_name).yaml" />
        <include file="$(find soccerbot)/launch/modules/strategy.launch" >
            <arg name="goalie" value="$(arg goalie)" />
        </include>
    </group>


</launch>

<!--        sudo docker run -e ROBOCUP_SIMULATOR_ADDR=127.0.0.1:10021 -e ROBOCUP_TEAM_COLOR=blue -e ROBOCUP_ROBOT_ID=1 -e ROBOCUP_GAMECONTROLLER_IP=127.0.1.1 -e ROBOCUP_MIRROR_SERVER_IP=127.0.0.1 &#45;&#45;net="host" utrarobosoccer/soccerbot:latest bash ./src/soccerbot/soccerbot/scripts/start_competition.sh robot1-->
<!--        git remote set-url origin git@github.com:utra-robosoccer/soccerbot.git-->