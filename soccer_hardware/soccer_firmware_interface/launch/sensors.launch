<!-- Launches the sensors and darknet for the robot -->
<launch>
    <arg name="robot_model" default="bez2" />
    <arg name="play_rosbag" default="false" />
    <arg name="record_rosbag" default="true" />
    <arg name="simulation" default="false" />
     <arg name="robot_name" value="robot1" />

    <param name="robot_model" value="$(arg robot_model)" />
    <param name="/use_sim_time" value="$(arg simulation)" />
    <param name="motor_mapping" value="$(find soccer_firmware_interface)/config/$(arg robot_model).yaml" />
    <param name="motor_types" value="$(find soccer_firmware_interface)/config/motor_types.yaml" />
    <node name="firmware_interface" pkg="soccer_firmware_interface" type="main.py" output="screen" unless="$(eval robot_model == 'bez1')" />
   <node pkg="imu_complementary_filter" type="complementary_filter_node" name="imu_complementary_filter" output="log">-->
      <rosparam file="$(find soccerbot)/config/imu_complementary_filter.yaml" command="load" />-->
      <remap from="imu/data_raw" to="imu_raw" />-->
      <remap from="imu/data" to="imu_filtered" />-->
   </node>-->
    <include file="$(find foxglove_bridge)/launch/foxglove_bridge.launch">
        <arg name="port" value="8765" />
    </include>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

    <param name="robot_description" command="xacro '$(find assembly_description)/urdf/assembly.xacro'
            robot_name:=$(arg robot_name)
            model_type:=dae
            file_path:=package://assembly_description
            has_base_footprint:=false
            tf_prefix:=$(arg robot_name)
            "
        />

</launch>
